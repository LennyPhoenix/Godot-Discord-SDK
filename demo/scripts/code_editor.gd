tool
extends TextEdit

# Copied from https://github.com/godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp#L39
var KEYWORDS: PoolStringArray = [
	"Empty",
	# Basic
	"Annotation",
	"Identifier",
	"Literal",
	# Comparison
	"<",
	"<=",
	">",
	">=",
	"==",
	"!=",
	# Logical
	"and",
	"or",
	"not",
	"&&",
	"||",
	"!",
	# Bitwise
	"&",
	"|",
	"~",
	"^",
	"<<",
	">>",
	# Math
	"+",
	"-",
	"*",
	"/",
	"%",
	# Assignment
	"=",
	"+=",
	"-=",
	"*=",
	"/=",
	"%=",
	"<<=",
	">>=",
	"&=",
	"|=",
	"^=",
	# Control flow
	"if",
	"elif",
	"else",
	"for",
	"while",
	"break",
	"continue",
	"pass",
	"return",
	"match",
	# Keywords
	"as",
	"assert",
	"await",
	"breakpoint",
	"class",
	"class_name",
	"const",
	"enum",
	"extends",
	"func",
	"in",
	"is",
	"namespace",
	"preload",
	"self",
	"signal",
	"static",
	"super",
	"trait",
	"var",
	"void",
	"yield",
	# Punctuation
	"[",
	"]",
	"{",
	"}",
	"(",
	")",
	",",
	";",
	".",
	"..",
	":",
	"$",
	"->",
	"_",
	# Whitespace
	"Newline",
	"Indent",
	"Dedent",
	# Constants
	"PI",
	"TAU",
	"INF",
	"NaN",
	# Error message improvement
	"VCS conflict marker",
	"`",
	"?",
	# Special
	"Error",
	"End of file",
	# Builtins
	"null",
	"bool", "true", "false",
	"int",
	"float",
	"abs",
	"acos",
	"asin",
	"atan",
	"atan2",
	"bytes2var",
	"cartesian2polar",
	"ceil",
	"char",
	"clamp",
	"convert",
	"cos",
	"cosh",
	"db2linear",
	"decimals",
	"dectime",
	"deg2rad",
	"dict2inst",
	"ease",
	"exp",
	"floor",
	"fmod",
	"fposmod",
	"funcref",
	"get_stack",
	"hash",
	"inst2dict",
	"instance_from_id",
	"inverse_lerp",
	"is_equal_approx",
	"is_inf",
	"is_instance_valid",
	"is_nan",
	"is_zero_approx",
	"len",
	"lerp",
	"lerp_angle",
	"linear2db",
	"load",
	"log",
	"max",
	"min",
	"move_toward",
	"nearest_po2",
	"ord",
	"parse_json",
	"polar2cartesian",
	"posmod",
	"pow",
	"print",
	"print_debug",
	"print_stack",
	"printerr",
	"printraw",
	"prints",
	"printt",
	"push_error",
	"push_warning",
	"rad2deg",
	"rand_range",
	"rand_seed",
	"randf",
	"randi",
	"randomize",
	"range",
	"range_lerp",
	"round",
	"seed",
	"sign",
	"sin",
	"sinh",
	"smoothstep",
	"sqrt",
	"step_decimals",
	"stepify",
	"str",
	"str2var",
	"tan",
	"tanh",
	"to_json",
	"type_exists",
	"typeof",
	"validate_json",
	"var2bytes",
	"var2str",
	"weakref",
	"wrapf",
	"wrapi",
]

var BASE_TYPES: PoolStringArray = [
	"AABB",
	"Array",
	"Basis",
	"Color",
	"Dictionary",
	"NodePath",
	"Plane",
	"PoolByteArray",
	"PoolColorArray",
	"PoolIntArray",
	"PoolRealArray",
	"PoolStringArray",
	"PoolVector2Array",
	"PoolVector3Array",
	"Quat",
	"RID",
	"Rect2",
	"String",
	"Transform",
	"Transform2D",
	"Vector2",
	"Vector3",
]

var ENGINE_TYPES: PoolStringArray = [
	"ARVRServer",
	"AudioServer",
	"CameraServer",
	"ClassDB",
	"Engine",
	"Geometry",
	"GodotSharp",
	"IP",
	"Input",
	"InputMap",
	"JSON",
	"JavaClassWrapper",
	"JavaScript",
	"Marshalls",
	"EditorNavigationMeshGenerator",
	"Object",
	"OS",
	"Performance",
	"Physics2DServer",
	"PhysicsServer",
	"ProjectSettings",
	"ResourceLoader",
	"ResourceSaver",
	"TranslationServer",
	"VisualScriptEditor",
	"VisualServer",
]


func _ready() -> void:
	for keyword in KEYWORDS:
		add_keyword_color(keyword, Color(1, 0.44, 0.52))
	for base_type in BASE_TYPES:
		add_keyword_color(base_type, Color(0.26, 1, 0.76))
	for engine_type in ENGINE_TYPES:
		add_keyword_color(engine_type, Color(0.556, 1, 0.856))
	add_keyword_color("Discord", Color(0.778, 1, 0.928))

	add_color_region("\"", "\"", Color(1, 0.925, 0.63)) # Strings
	add_color_region("#", "", Color(0.6, 0.6075, 0.6275), true) # Comments
